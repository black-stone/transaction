<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:tx="http://www.springframework.org/schema/tx"

	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- Application properties     -->
	<bean id="propertyPlaceholderConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:application.properties</value>
				<value>file:#{systemProperties['catalina.base']}/conf/application.properties
				</value>
			</list>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="ignoreResourceNotFound" value="true" />
	</bean>

	<bean id="persistence.EntityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="persistence.DataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="false" />
				<property name="generateDdl" value="false" />
				<property name="databasePlatform" value="org.hibernate.dialect.MySQL5InnoDBDialect" />
			</bean>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">create-drop</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.hbm2ddl.import_files">/META-INF/init-test.sql</prop>
			</props>
		</property>
	</bean>

	<bean id="persistence.DataSource" destroy-method="close"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
		<property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
		<property name="validationQuery" value="${jdbc.validationQuery}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
	</bean>

	<bean id="persistence.TransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="persistence.EntityManagerFactory" />
		<property name="dataSource" ref="persistence.DataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="persistence.TransactionManager"
		proxy-target-class="true" />
	<jpa:repositories base-package="test.repository"
		entity-manager-factory-ref="persistence.EntityManagerFactory"
		transaction-manager-ref="persistence.TransactionManager">
	</jpa:repositories>

	<bean id="service.UserService" class="test.service.UserService">
		<property name="userRepository" ref="userRepository" />
	</bean>
	
	<bean id="service.UserNameService" class="test.service.UserNameService">
		<property name="userNameRepository" ref="userNameRepository" />
	</bean>

	<bean id="service.UsefulService" class="test.service.UsefulService">
		<property name="userService" ref="service.UserService" />
		<property name="userNameService" ref="service.UserNameService" />
	</bean>

</beans>